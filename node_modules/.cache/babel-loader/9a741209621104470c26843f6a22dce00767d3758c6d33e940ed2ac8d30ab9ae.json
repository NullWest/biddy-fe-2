{"ast":null,"code":"var _jsxFileName = \"/Users/davebinary/code/biddy-ts/src/components/userInputField/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserInputField() {\n  _s();\n  const [text, setText] = useState('');\n  const [rows, setRows] = useState(1);\n  const maxRows = 7;\n  const handleChange = event => {\n    const textareaLineHeight = 24; // Approximate line height in pixels for Tailwind\n    const previousRows = event.target.rows;\n    event.target.rows = 1; // reset number of rows in textarea\n\n    const currentRows = Math.floor(event.target.scrollHeight / textareaLineHeight);\n    if (currentRows === previousRows) {\n      event.target.rows = currentRows;\n    }\n    if (currentRows >= maxRows) {\n      event.target.rows = maxRows;\n      event.target.scrollTop = event.target.scrollHeight;\n    }\n    setText(event.target.value);\n    setRows(currentRows < maxRows ? currentRows : maxRows);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 bg-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      rows: rows,\n      value: text,\n      placeholder: \"Type here...\",\n      onChange: handleChange,\n      style: {\n        resize: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UserInputField, \"McJuiO0h4SEFzTBRSgEcKb21bIY=\");\n_c = UserInputField;\nvar _c;\n$RefreshReg$(_c, \"UserInputField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UserInputField","_s","text","setText","rows","setRows","maxRows","handleChange","event","textareaLineHeight","previousRows","target","currentRows","Math","floor","scrollHeight","scrollTop","value","children","className","placeholder","onChange","style","resize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davebinary/code/biddy-ts/src/components/userInputField/index.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nexport default function UserInputField(){\n    \n    const [text, setText] = useState('');\n    const [rows, setRows] = useState(1);\n    const maxRows = 7;\n  \n    const handleChange = (event:any) => {\n      const textareaLineHeight = 24; // Approximate line height in pixels for Tailwind\n      const previousRows = event.target.rows;\n      event.target.rows = 1; // reset number of rows in textarea\n  \n      const currentRows = Math.floor(event.target.scrollHeight / textareaLineHeight);\n  \n      if (currentRows === previousRows) {\n        event.target.rows = currentRows;\n      }\n  \n      if (currentRows >= maxRows) {\n        event.target.rows = maxRows;\n        event.target.scrollTop = event.target.scrollHeight;\n      }\n  \n      setText(event.target.value);\n      setRows(currentRows < maxRows ? currentRows : maxRows);\n    };\n  \n    return (\n      <>\n      <textarea\n        className=\"w-full p-2 bg-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        rows={rows}\n        value={text}\n        placeholder=\"Type here...\"\n        onChange={handleChange}\n        style={{ resize: 'none' }}\n      />\n      <button>Enter</button>\n      </>\n    );\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EAEpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMW,OAAO,GAAG,CAAC;EAEjB,MAAMC,YAAY,GAAIC,KAAS,IAAK;IAClC,MAAMC,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAC/B,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,CAACP,IAAI;IACtCI,KAAK,CAACG,MAAM,CAACP,IAAI,GAAG,CAAC,CAAC,CAAC;;IAEvB,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACG,MAAM,CAACI,YAAY,GAAGN,kBAAkB,CAAC;IAE9E,IAAIG,WAAW,KAAKF,YAAY,EAAE;MAChCF,KAAK,CAACG,MAAM,CAACP,IAAI,GAAGQ,WAAW;IACjC;IAEA,IAAIA,WAAW,IAAIN,OAAO,EAAE;MAC1BE,KAAK,CAACG,MAAM,CAACP,IAAI,GAAGE,OAAO;MAC3BE,KAAK,CAACG,MAAM,CAACK,SAAS,GAAGR,KAAK,CAACG,MAAM,CAACI,YAAY;IACpD;IAEAZ,OAAO,CAACK,KAAK,CAACG,MAAM,CAACM,KAAK,CAAC;IAC3BZ,OAAO,CAACO,WAAW,GAAGN,OAAO,GAAGM,WAAW,GAAGN,OAAO,CAAC;EACxD,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA;MACEsB,SAAS,EAAC,uFAAuF;MACjGf,IAAI,EAAEA,IAAK;MACXa,KAAK,EAAEf,IAAK;MACZkB,WAAW,EAAC,cAAc;MAC1BC,QAAQ,EAAEd,YAAa;MACvBe,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF9B,OAAA;MAAAqB,QAAA,EAAQ;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACpB,CAAC;AAGT;AAAC1B,EAAA,CAxCuBD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}